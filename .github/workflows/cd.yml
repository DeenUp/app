name: Continuous Deployment

on:
    pull_request:
        types: [closed]
        branches:
            - production
            - dev
    push:
        branches:
            - staging

jobs:
    build-ios:
        runs-on: macOS-latest
        environment: ${{ github.ref_name}}

        steps:
            - name: üìÇ Checkout code
              uses: actions/checkout@v4

            - name: üöÄ Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest

            - name: Install pnpm
              run: npm install -g pnpm --unsafe-perm=true

            - name: üì¶ Install dependencies
              run: pnpm install

            - name: üñäÔ∏èüìú Generate .env
              run: |
                  touch .env
                  echo "FLAVOR=${{ github.ref_name }}" > .env
                  echo "EXPO_PROJECT_ID=${{ secrets.EXPO_PROJECT_ID }}" >> .env

            - name: üñäÔ∏èüìú Generate Amplify config
              run: |
                  echo ${{secrets.AMPLIFY_CONFIG}} | base64 --decode > amplify.json

            - name: üîç Check if .env & Amplify config exists
              run: |
                  if [ ! -f  amplify.json ]; then
                    echo "Amplify config does not exist"
                    exit 1
                  fi
                  if [ ! -f .env ]; then
                    echo ".env file does not exist"
                    exit 1
                  fi

            - name: üß∞ Setup Expo and EAS
              uses: expo/expo-github-action@v8
              with:
                  token: ${{ secrets.EXPO_TOKEN }}
                  expo-version: latest
                  eas-version: latest
                  expo-cache: true

            - name: üë∑ Build iOS app
              run: |
                  eas build --local \
                    --non-interactive \
                    --platform=ios \
                    --profile=${{ github.ref_name}}

            - name: üì± Upload artifact
              uses: actions/upload-artifact@v4
              id: upload-artifact
              if: success()
              with:
                  name: app.ipa
                  path: ./build/app.ipa

            - name: üì£ Notify Discord about iOS build and share the artifact URL
              uses: sarisia/actions-status-discord@v1
              if: failure() || success()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK_DEPLOYMENT_DEV }}
                  title: "iOS Build Success üçè"
                  description: |
                      ${{ job.status == 'success' && 'iOS build has been completed :white_check_mark:' || 'iOS build has failed :x:'}}
                      ${{ job.status == 'success' && steps.upload-artifact.outputs.artifact-url || ''}}
                  status: ${{ job.status }}
                  color: ${{ job.status == 'success' && '00FF00' || 'FF0000' }}

    build-android:
        runs-on: ubuntu-latest
        environment: ${{ github.ref_name}}

        steps:
            - name: üìÇ Checkout code
              uses: actions/checkout@v4

            - name: ‚öôÔ∏è Setup Java
              uses: actions/setup-java@v4
              with:
                  distribution: "temurin"
                  java-version: "17"

            - name: ‚öôÔ∏è Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: latest

            - name: üõ†Ô∏è Install pnpm
              run: npm install -g pnpm --unsafe-perm=true

            - name: üì¶ Install dependencies
              run: pnpm install

            - name: üñäÔ∏èüìú Generate .env
              run: |
                  touch .env
                  echo "FLAVOR=${{ github.ref_name }}" > .env
                  echo "EXPO_PROJECT_ID=${{ secrets.EXPO_PROJECT_ID }}" >> .env

            - name: üñäÔ∏èüìú Generate Amplify config
              run: |
                  echo ${{secrets.AMPLIFY_CONFIG}} | base64 --decode > amplify.json

            - name: üîç Check if .env & Amplify config exists
              run: |
                  if [ ! -f amplify.json ]; then
                    echo "Amplify config does not exist"
                    exit 1
                  fi
                  if [ ! -f .env ]; then
                    echo ".env file does not exist"
                    exit 1
                  fi

            - name: üß∞ Setup Expo and EAS
              uses: expo/expo-github-action@v8
              with:
                  token: ${{ secrets.EXPO_TOKEN }}
                  expo-version: latest
                  eas-version: latest
                  expo-cache: true

            - name: üë∑ Build Android app
              run: |
                  eas build --local \
                    --platform=android \
                    --profile=${{ github.ref_name}}

            - name: üì± Upload artifact
              id: upload-artifact
              uses: actions/upload-artifact@v4
              with:
                  name: app.aab
                  path: ./build/app.aab
                  retention-days: 1
                  overwrite: true

            - name: üì£ Notify Discord about Android build and share the artifact URL
              uses: sarisia/actions-status-discord@v1
              if: failure() || success()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK_DEPLOYMENT_DEV }}
                  title: "Android Build Success ü§ñ"
                  description: |
                      ${{ job.status == 'success' && 'Android build has been completed :white_check_mark:' || 'Android build has failed :x:'}}
                      ${{ job.status == 'success' && steps.upload-artifact.outputs.artifact-url || ''}}
                  status: ${{ job.status }}
                  color: ${{ job.status == 'success' && '00FF00' || 'FF0000' }}

            - name: üö¢ Submit Android app
              run: eas submit -p android --profile ${{ github.ref_name }} --path build/

            - name: Notify Discord
              uses: sarisia/actions-status-discord@v1
              if: failure() || success()
              with:
                  webhook: ${{ secrets.DISCORD_WEBHOOK_DEPLOYMENT_DEV }}
                  title: "Android Shipment"
                  description: "Android shipment has been completed"
                  status: ${{ job.status }}
                  color: ${{ job.status == 'success' && '00FF00' || 'FF0000' }}
